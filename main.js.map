{"version":3,"file":"main.js","mappings":"yBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,WCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UAC5C,GAAGD,EAAQE,OAEV,IADA,IAAIC,EAAIH,EAAQE,OAAS,EAClBC,GAAK,IAAMT,GAAWA,EAAYM,EAAQG,KAAKJ,GAExD,CAID,IAAKL,EAAW,MAAM,IAAIU,MAAM,yDAChCV,EAAYA,EAAUW,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFlB,EAAoBmB,EAAIZ,C,IChBT,MAAMa,EACnBC,WAAAA,GACElB,KAAKmB,UAAYZ,SAASa,iBAAiB,cAC3CpB,KAAKqB,OAAS,yBAChB,CAEAC,SAAAA,GACE,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,SAAW1B,KAAKmB,UAAUP,QAEzDe,EAAMpB,SAASqB,cAAc,OACjCD,EAAIlB,IAAMT,KAAKqB,OAEfrB,KAAKmB,UAAUI,GAAcM,OAAOF,EACtC,CAEAG,YAAAA,GACYvB,SAASwB,cAAc,OAC7BC,QACN,CAEAC,oBAAAA,GACEjC,KAAK8B,eACL9B,KAAKsB,WACP,ECtBF,MAAMA,EAAY,IAAIY,EAChBC,EAAO,ICAE,MACbjB,WAAAA,CAAYkB,GACc,iBAAbA,IAETA,EAAW7B,SAASa,iBAAiBgB,IAGvCpC,KAAKqC,IAAM,EACXrC,KAAKsC,SAAW/B,SAASwB,cAAc,cACvC/B,KAAKuC,KAAO,EACZvC,KAAKwC,UAAYjC,SAASwB,cAAc,eAExC/B,KAAKsB,UAAY,IAAIL,EACrBjB,KAAKyC,YAAczC,KAAKyC,YAAYC,KAAK1C,MAGzCA,KAAK2C,UAAYP,EAGjBpC,KAAK2C,UAAUC,SAASC,GAAYA,EAAQC,iBAAiB,QAAS9C,KAAKyC,cAC7E,CAEAM,kBAAAA,GACEC,aAAY,KACVhD,KAAKsB,UAAUW,uBACfjC,KAAKuC,MAAQ,EACbvC,KAAKiD,YACLjD,KAAKkD,YAAY,GAChB,IACL,CAEAT,WAAAA,CAAYvC,GACNA,EAAEiD,cAAcC,iBAClBpD,KAAKqC,KAAO,EACZrC,KAAKsB,UAAUW,uBACfjC,KAAKiD,YACLjD,KAAKqD,cAELrD,KAAKuC,MAAQ,EACbvC,KAAKiD,YACLjD,KAAKkD,aAET,CAEAG,SAAAA,GACmB,IAAbrD,KAAKqC,MACPiB,MAAM,YACNhD,SAASiD,SAEb,CAEAL,UAAAA,GACoB,IAAdlD,KAAKuC,OACPe,MAAM,aACNhD,SAASiD,SAEb,CAEAN,SAAAA,GACEjD,KAAKsC,SAASkB,YAAcxD,KAAKqC,IACjCrC,KAAKwC,UAAUgB,YAAcxD,KAAKuC,IACpC,GD7D0B,cAE5BJ,EAAKc,YACL3B,EAAUA,YACVa,EAAKY,qB","sources":["webpack://ahj_3/webpack/bootstrap","webpack://ahj_3/webpack/runtime/global","webpack://ahj_3/webpack/runtime/publicPath","webpack://ahj_3/./src/js/addGoblin.js","webpack://ahj_3/./src/js/app.js","webpack://ahj_3/./src/js/goblinGame.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","/* eslint-disable class-methods-use-this */\n/* eslint-disable prefer-const */\nexport default class AddGoblin {\n  constructor() {\n    this.gameCells = document.querySelectorAll('.game_cell');\n    this.goblin = './assets/img/goblin.png';\n  }\n\n  addGoblin() {\n    let randomNumber = Math.floor(Math.random() * this.gameCells.length);\n\n    let img = document.createElement('img');\n    img.src = this.goblin;\n\n    this.gameCells[randomNumber].append(img);\n  }\n\n  removeGoblin() {\n    let img = document.querySelector('img');\n    img.remove();\n  }\n\n  changeGoblinPosition() {\n    this.removeGoblin();\n    this.addGoblin();\n  }\n}\n","import Goblin from './addGoblin';\nimport GoblinGame from './goblinGame';\n\nconst addGoblin = new Goblin();\nconst game = new GoblinGame('.game_cell');\n\ngame.showScore();\naddGoblin.addGoblin();\ngame.goblinTransference();\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-alert */\nimport AddGoblin from './addGoblin';\n\nexport default class GoblinGame {\n  constructor(elements) {\n    if (typeof elements === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      elements = document.querySelectorAll(elements);\n    }\n\n    this.win = 0;\n    this.winScore = document.querySelector('.win_score');\n    this.lose = 0;\n    this.loseScore = document.querySelector('.lose_score');\n\n    this.addGoblin = new AddGoblin();\n    this.goblinClick = this.goblinClick.bind(this);\n\n    // eslint-disable-next-line no-underscore-dangle\n    this._elements = elements;\n\n    // eslint-disable-next-line no-underscore-dangle\n    this._elements.forEach((element) => element.addEventListener('click', this.goblinClick));\n  }\n\n  goblinTransference() {\n    setInterval(() => {\n      this.addGoblin.changeGoblinPosition();\n      this.lose += 1;\n      this.showScore();\n      this.goblinLose();\n    }, 2000);\n  }\n\n  goblinClick(e) {\n    if (e.currentTarget.hasChildNodes()) {\n      this.win += 1;\n      this.addGoblin.changeGoblinPosition();\n      this.showScore();\n      this.goblinWin();\n    } else {\n      this.lose += 1;\n      this.showScore();\n      this.goblinLose();\n    }\n  }\n\n  goblinWin() {\n    if (this.win === 5) {\n      alert('You Win!');\n      location.reload();\n    }\n  }\n\n  goblinLose() {\n    if (this.lose === 5) {\n      alert('You Lose!');\n      location.reload();\n    }\n  }\n\n  showScore() {\n    this.winScore.textContent = this.win;\n    this.loseScore.textContent = this.lose;\n  }\n}\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","AddGoblin","constructor","gameCells","querySelectorAll","goblin","addGoblin","randomNumber","Math","floor","random","img","createElement","append","removeGoblin","querySelector","remove","changeGoblinPosition","Goblin","game","elements","win","winScore","lose","loseScore","goblinClick","bind","_elements","forEach","element","addEventListener","goblinTransference","setInterval","showScore","goblinLose","currentTarget","hasChildNodes","goblinWin","alert","reload","textContent"],"sourceRoot":""}